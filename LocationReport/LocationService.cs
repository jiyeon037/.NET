//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Erp.BusinessManager
{
    using System;
    using System.ServiceModel;
    using System.ServiceModel.Channels;
    using System.Runtime.Serialization;
    using System.ServiceModel.Web;
    using System.Data;
    
    
    // 테이블('Location')에 대한 Service 클래스
    // 여기 코드는 용도에 맞게 수정하여 사용하십시오
    // 
    [ServiceBehavior(InstanceContextMode=InstanceContextMode.PerCall, IncludeExceptionDetailInFaults=true)]
    public class LocationService : EnterpriseManager.Service, LocationInterface
    {
        
        public void Empty()
        {
        }

        public LocationSet GetForLocationType(int locationType)
        {
            // Sql Command 명령문
            System.Data.IDbCommand sqlSelectCommand = EnterpriseManager.DbFactory.CreateDbCommand();
            sqlSelectCommand.CommandText =
@"SELECT * FROM Location 
WHERE LocationType = @locationType
  order by LocationName";
            sqlSelectCommand.CommandType = System.Data.CommandType.Text;
            // 
            // 파라미터2값을 만든다
            System.Data.IDataParameter locationTypeParam = EnterpriseManager.DbFactory.CreateDataParameter("@locationType", typeof(int));
            locationTypeParam.Value = locationType;
            sqlSelectCommand.Parameters.Add(locationTypeParam);

            // 
            // 
            // 명령문을 호출한다
            LocationSet entitySet = ((LocationSet)(this.GetEntitySet(sqlSelectCommand, typeof(LocationSet))));
            sqlSelectCommand.Dispose();
            return entitySet;
        }

        public LocationSet Get구매창고()
        {
            // Sql Command 명령문
            System.Data.IDbCommand sqlSelectCommand = EnterpriseManager.DbFactory.CreateDbCommand();
            sqlSelectCommand.CommandText =
@"
select * from Location
where LocationType = 1 and CostCenterLocationFlag = 0
order by LocationNo
";
            sqlSelectCommand.CommandType = System.Data.CommandType.Text;
            // 
            // 
            // 명령문을 호출한다
            LocationSet entitySet = ((LocationSet)(this.GetEntitySet(sqlSelectCommand, typeof(LocationSet))));
            sqlSelectCommand.Dispose();
            return entitySet;
        }

        public DataSet GetLocationFromNo(int locationNo)
        {
            //Sql Command 명령문
            System.Data.IDbCommand sqlSelectCommand = EnterpriseManager.DbFactory.CreateDbCommand();
            sqlSelectCommand.CommandText =
//@"select LocationNo, LocationName from location where LocationNo = @locationNo like '%" + locationNo + "%'";
@"select LocationNo, LocationName from location where LocationNo like '%" + locationNo + "%'";

            sqlSelectCommand.CommandType = System.Data.CommandType.Text;

            //System.Data.IDataParameter locationNoParam = EnterpriseManager.DbFactory.CreateDataParameter("@locationNo", typeof(int));
            //locationNoParam.Value = locationNo;
            //sqlSelectCommand.Parameters.Add(locationNoParam);

            //명령문을 호출한다
            DataSet dataSet = (DataSet)this.GetDataSet(sqlSelectCommand);
            sqlSelectCommand.Dispose();
            return dataSet;
        }

        public DataSet GetLocationData(int locationNo)
        {
            System.Data.IDbCommand sqlSelectCommand = EnterpriseManager.DbFactory.CreateDbCommand();
            sqlSelectCommand.CommandText =
@"
select a.LocationNo, a.LocationName, a.BusinessClassCode, b.CompanyName 
from location a inner join BusinessClass b 
on a.BusinessClassCode = b.BusinessClassCode where a.LocationNo = @locationNo
";
            sqlSelectCommand.CommandType = System.Data.CommandType.Text;

            System.Data.IDataParameter locationNoParam = EnterpriseManager.DbFactory.CreateDataParameter("@locationNo", typeof(int));
            locationNoParam.Value = locationNo;
            sqlSelectCommand.Parameters.Add(locationNoParam);

            // 명령문을 호출한다
            DataSet dataSet = (DataSet)GetDataSet(sqlSelectCommand);
            sqlSelectCommand.Dispose();
            return dataSet;

        }

        public DataSet GetLocationName()
        {
            System.Data.IDbCommand sqlSelectCommand = EnterpriseManager.DbFactory.CreateDbCommand();

            // Sql Command 명령문
            sqlSelectCommand.CommandText =
@"select LocationNo, LocationName from location";

            sqlSelectCommand.CommandType = System.Data.CommandType.Text;
            // 
            // 
            // 명령문을 호출한다
            DataSet dataset = this.GetDataSet(sqlSelectCommand);
            sqlSelectCommand.Dispose();
            return dataset;
        }

    }
}
