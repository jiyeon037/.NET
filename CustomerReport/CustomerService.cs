//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Erp.BusinessManager
{
    using System;
    using System.ServiceModel;
    using System.ServiceModel.Channels;
    using System.Runtime.Serialization;
    using System.ServiceModel.Web;
    using System.Data;
    
    
    // 테이블('Customers')에 대한 Service 클래스
    // 여기 코드는 용도에 맞게 수정하여 사용하십시오
    // 
    [ServiceBehavior(InstanceContextMode=InstanceContextMode.PerCall, IncludeExceptionDetailInFaults=true)]
    public class CustomerService : EnterpriseManager.Service, CustomerInterface
    {
        
        public void Empty()
        {
        }

        public DataSet GetAllData(string customerShortName)
        {
            System.Data.IDbCommand sqlSelectCommand = EnterpriseManager.DbFactory.CreateDbCommand();

            // Sql Command 명령문
            sqlSelectCommand.CommandText =
@"select CustomerCode, CustomerName, BusinessCode, President, BusinessItem, BusinessType, Phone, CustomerShortName from Customers where CustomerShortName like '%"+customerShortName+"%' order by CustomerCode";

            sqlSelectCommand.CommandType = System.Data.CommandType.Text;
            // 
            // 
            // 명령문을 호출한다
            DataSet dataset = this.GetDataSet(sqlSelectCommand);
            sqlSelectCommand.Dispose();
            return dataset;
        }

        public DataSet GetAllData율촌구매(string customerShortName)
        {
            System.Data.IDbCommand sqlSelectCommand = EnterpriseManager.DbFactory.CreateDbCommand();
            
            // Sql Command 명령문
            sqlSelectCommand.CommandText =
@"select CustomerCode, CustomerName, BusinessCode, President, BusinessItem, BusinessType, Phone, CustomerShortName from Customers where CustomerShortName like '%" + customerShortName + "%' and class4 = 1 or class5 = 1 order by CustomerCode ";

            sqlSelectCommand.CommandType = System.Data.CommandType.Text;
            // 
            // 
            // 명령문을 호출한다
            DataSet dataset = this.GetDataSet(sqlSelectCommand);
            sqlSelectCommand.Dispose();
            return dataset;
        }

        /// <summary>
        /// 원재료 재고(CommodityCode = 1) 가 있는 거래처정보
        /// 주의: 재질이 동일할때만 
        /// </summary>
        /// <returns></returns>
        public DataSet Get원재료재고공급업체()
            {
            System.Data.IDbCommand sqlSelectCommand = EnterpriseManager.DbFactory.CreateDbCommand();

            // Sql Command 명령문
            sqlSelectCommand.CommandText =
@"
select CustomerCode, CustomerName
from Customers 
where CustomerCode in
	(select distinct b.CustomerCode
	 from stocks a inner join PartSpecs b on a.PartCode = b.PartCode and a.PartSpec = b.PartSpec
	 where CommodityCode = 1 )
Order by CustomerName
";
            sqlSelectCommand.CommandType = System.Data.CommandType.Text;

            // 
            // 
            // 명령문을 호출한다
            DataSet dataset = this.GetDataSet(sqlSelectCommand);
            sqlSelectCommand.Dispose();
            return dataset;
        }


        public DataSet GetCodeName()//@@@
        {
            System.Data.IDbCommand sqlSelectCommand = EnterpriseManager.DbFactory.CreateDbCommand();

            // Sql Command 명령문
            sqlSelectCommand.CommandText =
@"select CustomerCode, CustomerName from Customers";

            sqlSelectCommand.CommandType = System.Data.CommandType.Text;
            // 
            // 
            // 명령문을 호출한다
            DataSet dataset = this.GetDataSet(sqlSelectCommand);
            sqlSelectCommand.Dispose();
            return dataset;
        }


        public DataSet GetCustomerData(string CustomerCode)
        {
            System.Data.IDbCommand sqlSelectCommand = EnterpriseManager.DbFactory.CreateDbCommand();

            // Sql Command 명령문
            sqlSelectCommand.CommandText =
@"select President, Address, BusinessType, BusinessItem from customers where customercode = @customerCode";

            sqlSelectCommand.CommandType = System.Data.CommandType.Text;
            // 

            System.Data.IDataParameter CustomerCodeParam = EnterpriseManager.DbFactory.CreateDataParameter("@customerCode", typeof(string));
            CustomerCodeParam.Value = CustomerCode;
            sqlSelectCommand.Parameters.Add(CustomerCodeParam);

            // 
            // 명령문을 호출한다
            DataSet dataset = this.GetDataSet(sqlSelectCommand);
            sqlSelectCommand.Dispose();
            return dataset;
        }



        public DataSet GetFindByCustomerCode(string CustomerCode)
        {
            System.Data.IDbCommand sqlSelectCommand = EnterpriseManager.DbFactory.CreateDbCommand();

            // Sql Command 명령문
            sqlSelectCommand.CommandText =
@"select CustomerCode, CustomerName from Customers where customercode like '%" + CustomerCode+"%'";

            sqlSelectCommand.CommandType = System.Data.CommandType.Text;
            // 
            // 
            // 명령문을 호출한다
            DataSet dataset = this.GetDataSet(sqlSelectCommand);
            sqlSelectCommand.Dispose();
            return dataset;
        }



    }
}
